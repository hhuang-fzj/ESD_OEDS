# SPDX-FileCopyrightText: Florian Maurer
#
# SPDX-License-Identifier: AGPL-3.0-or-later

version: "3"
services:
  open-data-17:
    image: timescale/timescaledb-ha:pg17-oss
    container_name: open-data-17
    restart: always
    shm_size: 32g
    user: "0:0"
    command: postgres -c 'max_connections=6000' -c 'timescaledb.max_background_workers=32' -c 'timescaledb.telemetry_level=off'
    environment:
      - POSTGRES_USER=opendata
      - POSTGRES_PASSWORD=opendata
      - POSTGRES_DB=opendata
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./data/open-data-ha:/var/lib/postgresql
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "6432:5432"

  pgadmin:
    user: root
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
      - ./data/provisioning/pgadmin/servers.json:/pgadmin4/servers.json
    ports:
      - "8080:80"
    depends_on:
      - open-data-17

  open-postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgres://readonly:readonly@open-data-17:5432/opendata
      PGRST_DB_PRE_CONFIG: postgrest.pre_config
      PGRST_DB_ANON_ROLE: readonly
      PGRST_DB_AGGREGATES_ENABLED: True
    depends_on:
      - open-data-17

  grafana:
    image: grafana/grafana-oss:latest
    container_name: oeds-grafana
    user: "104"
    depends_on:
      - open-data-17
    ports:
      - 3006:3000
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_INSTALL_PLUGINS: "marcusolsson-dynamictext-panel,orchestracities-map-panel"
      GF_SECURITY_ADMIN_USER: opendata
      GF_SECURITY_ADMIN_PASSWORD: "opendata"
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - ./data/provisioning/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./data/provisioning/grafana/dashboardproviders:/etc/grafana/provisioning/dashboards
      - ./data/provisioning/grafana/dashboards:/var/lib/grafana/dashboards
    restart: always
